
services:
  rotator:
    build:
      context: ../
      dockerfile: ./deployments/Dockerfile
    container_name: rotator
    environment:
      WAIT_HOSTS: postgres:5432
    restart: on-failure
    ports:
      - "50051:50051"
    expose:
      - 50051
    depends_on:
      - postgres
    networks:
      rotator:

  postgres:
    image: postgres:16.3-alpine3.19
    hostname: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=storage
    volumes:
      - pgdata:/var/lib/postgres/data
    ports:
      - "5432:5432"
    expose:
      - 5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      rotator:

networks:
  rotator:

volumes:
  pgdata:
